import type {
  Element,
  Selector,
  Eyes,
  ConfigurationPlain,
  Configuration,
  Image,
  CheckSettingsImage,
  CheckSettingsAutomation,
  CheckSettingsImagePlain,
  CheckSettingsAutomationPlain,
  TestResults,
  TestResultsSummary,
} from './index'
    
declare global {
  namespace WebdriverIO {
    interface ServiceOption extends ConfigurationPlain {
      useExecutionCloud?: boolean
      useVisualGrid?: boolean
      concurrency?: number
      enableEyesLogs?: boolean
      /** @deprecated */
      eyes?: ServiceOption
    }

    interface Browser {
      getEyes(): Eyes
      eyesGetConfiguration(): Configuration
      eyesSetConfiguration(configuration: ConfigurationPlain): void
      eyesCheck(name: string, checkSettings: CheckSettingsImage | CheckSettingsAutomation): Promise<void>
      eyesCheck(target: Image, checkSettings?: CheckSettingsImagePlain): Promise<void>
      eyesCheck(checkSettings?: CheckSettingsAutomationPlain): Promise<void>
      eyesGetResults(throwErr: boolean): Promise<TestResults[]>
      eyesGetAllTestResults(throwErr: boolean): Promise<TestResultsSummary>
      
      /** @deprecated */
      eyesGetIsOpen(): boolean
      /** @deprecated */
      eyesSetScrollRootElement(element: Element | Selector): void
      /** @deprecated */
      eyesAddProperty(key: string, value: string): void
      /** @deprecated */
      eyesClearProperties(): void
      /** @deprecated */
      eyesGetTestResults(throwErr: boolean): Promise<TestResults>
    }
  }
}
